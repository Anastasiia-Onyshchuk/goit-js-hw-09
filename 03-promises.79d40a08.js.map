{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,2BAmBjC,SAASI,GAAcC,SAAEA,EAAQJ,MAAEA,IACjC,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,CAAEL,SAAUA,EAAUJ,MAAOA,IAErCU,EAAO,CAAEN,SAAUA,EAAUJ,MAAOA,GAAQ,GAE7CA,EAAM,G,CAGb,SAASY,GAAUR,SAAEA,EAAQJ,MAAEA,IAC7Ba,EAAAnB,GAASoB,OAAOC,QAAQ,uBAAqBX,QAAiBJ,M,CAGhE,SAASgB,GAAQZ,SAAEA,EAAQJ,MAAEA,IAC3Ba,EAAAnB,GAASoB,OAAOG,QAAQ,sBAAoBb,QAAeJ,M,CAjC7DJ,EAAKC,KAAKqB,iBAAiB,UAAWC,IACpCA,EAAIC,kBAQN,UAA2BpB,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,IACxC,IAAK,IAAIE,EAAW,EAAGA,GAAYF,EAAQE,IACzCD,EAAc,C,SAAEC,E,MAAUJ,IAASqB,KAAKT,GAAWU,MAAMN,GACzDhB,GAASC,C,CANXsB,CAAkB,CAACvB,MAJFwB,SAAS5B,EAAKI,MAAMyB,OAICxB,KAHpBuB,SAAS5B,EAAKK,KAAKwB,OAGkBvB,OAFnCsB,SAAS5B,EAAKM,OAAOuB,QAEmC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix, { Notify } from \"notiflix\";\n\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name =\"delay\"]'), \n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', (evt) => {\n  evt.preventDefault();\n  let delayValue = parseInt(refs.delay.value);\n  const stepValue = parseInt(refs.step.value);\n  const amountValue = parseInt(refs.amount.value);\n\n  createNewPromises({delay: delayValue, step: stepValue, amount: amountValue});\n});\n\nfunction createNewPromises({ delay, step, amount }) {\n  for (let position = 1; position <= amount; position++) {\n    createPromise({ position, delay }).then(onSuccess).catch(onError);\n    delay += step;\n  }\n}\n\nfunction createPromise({ position, delay }) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position: position, delay: delay });\n      } else {\n        reject({ position: position, delay: delay });\n      }\n    }, delay);\n  });\n}\nfunction onSuccess({ position, delay }) {\n  Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n};\n\nfunction onError({ position, delay }) {\n  Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n}\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$47d4ff9957288465$var$onSuccess","$parcel$interopDefault","Notify","success","$47d4ff9957288465$var$onError","failure","addEventListener","evt","preventDefault","then","catch","$47d4ff9957288465$var$createNewPromises","parseInt","value"],"version":3,"file":"03-promises.79d40a08.js.map"}