{"mappings":"AAAa,CACLA,SAASC,cAAc,QACtBD,SAASC,cAAc,wBACxBD,SAASC,cAAc,wBACrBD,SAASC,cAAc,2BAGjCC,GAAUC,iBAAiB,SAElB,IAAIC,SAAQ,SAACC,EAASC,GACLC,KAAKC,Q","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name =\"delay\"]'), \n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', createPromise())\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n  })\n  setTimeout(() => {\n      if (shouldResolve) {\n    resolve ({position, delay})\n  } else {\nreject ([{position, delay}])\n  }\n  }, delay)\n\n}\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["document","querySelector","$ce04d3a99e08e73b$var$refs","addEventListener","Promise","resolve","reject","Math","random"],"version":3,"file":"03-promises.c03d8e2d.js.map"}