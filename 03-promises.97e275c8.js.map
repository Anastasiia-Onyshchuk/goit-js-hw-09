{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAiBC,GAEb,OAAOA,GAAOA,EAAIC,cAAgBC,OAAS,gBAAkBF,C,mBCN3DG,EAAO,CACXC,KAAMC,SAASC,cAAc,QAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,2BA+BjC,SAASI,EAAcC,EAAUJ,GAE/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEF,WAAUJ,UAEpBO,EAAO,CAAC,CAAEH,WAAUJ,U,GAErBA,E,IAtCPJ,EAAKC,KAAKe,iBAAiB,UAAU,SAACC,GACpCA,EAAIC,iBACJ,IAAMC,EAAaC,SAASpB,EAAKI,MAAMT,OACjC0B,EAAYD,SAASpB,EAAKK,KAAKV,OAC/B2B,EAAcF,SAASpB,EAAKM,OAAOX,OAErC4B,EAAQ,GAEZ,SAASC,EAAcC,GACrBA,EACGC,MAAK,SAAAC,G,IAAGnB,EAAQmB,EAARnB,SAAUJ,EAAKuB,EAALvB,MAClBwB,EAAAC,GAASC,OAAOC,QAAQ,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAAN5B,EAAM,OACnEmB,IACFU,QAAQC,IAAIN,EAAAlC,EAAA,CAAQkC,EAAAC,GAASC,SACzBP,GAASD,GACXE,EAAcjB,EAAcgB,EAAOnB,GAASmB,EAAQ,GAAKF,G,IAG5Dc,OAAM,SAAAR,G,IAAGnB,EAAQmB,EAARnB,SAAUJ,EAAKuB,EAALvB,MAClBwB,EAAAC,GAASC,OAAOM,QAAQ,sBAAqCJ,OAAfxB,EAAS,QAAYwB,OAAN5B,EAAM,SACnEmB,GACaD,GACXE,EAAcjB,EAAcgB,EAAOnB,GAASmB,EAAQ,GAAKF,G,IAIjEG,CAAcjB,EAAcgB,EAAOJ,G","sources":["node_modules/@swc/helpers/lib/_type_of.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('form'),\n  delay: document.querySelector('input[name =\"delay\"]'), \n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', (evt) => {\n  evt.preventDefault()\n  const delayValue = parseInt(refs.delay.value);\n  const stepValue = parseInt(refs.step.value);\n  const amountValue = parseInt(refs.amount.value);\n  const promises = [];\n  let count = 1;\n\n  function handlePromise(promise) {\n    promise\n      .then(({ position, delay }) => {\n       Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        count++;\n        console.log(typeof (Notiflix.Notify));\n        if (count <= amountValue) {\n          handlePromise(createPromise(count, delay + (count - 1) * stepValue));\n        }\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        count++;\n        if (count <= amountValue) {\n          handlePromise(createPromise(count, delay + (count - 1) * stepValue));\n        }\n      });\n  }\n  handlePromise(createPromise(count, delayValue));\n})\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay })\n      } else {\n        reject([{ position, delay }])\n      }\n    }, delay);\n  });\n}\n"],"names":["Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","delayValue","parseInt","stepValue","amountValue","count","handlePromise","promise","then","param","$parcel$interopDefault","$6JpON","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.97e275c8.js.map"}